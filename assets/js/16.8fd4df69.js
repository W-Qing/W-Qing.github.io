(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{352:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[a("strong",[s._v("CommonJS规范的主要内容：")])]),s._v(" "),a("blockquote",[a("p",[s._v("模块必须通过 module.exports 导出对外的变量或接口，通过 require() 来导入其他模块的输出到当前模块作用域中。")])]),s._v(" "),a("p",[a("strong",[s._v("CommonJS模块的特点：")])]),s._v(" "),a("blockquote",[a("p",[s._v("（1）所有代码运行在当前模块作用域中，不会污染全局作用域 。")]),s._v(" "),a("p",[s._v("（2）模块同步加载，根据代码中出现的顺序依次加载 。")]),s._v(" "),a("p",[s._v("（3）模块可以多次加载，但是只会在第一次加载时运行一次，然后运行结果就被缓存了，以后再加载，就直接读取缓存结果。要想让模块再次运行，必须清除缓存。")])]),s._v(" "),a("h2",{attrs:{id:"模块的创建与加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的创建与加载","aria-hidden":"true"}},[s._v("#")]),s._v(" 模块的创建与加载")]),s._v(" "),a("h3",{attrs:{id:"exports导出模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exports导出模块","aria-hidden":"true"}},[s._v("#")]),s._v(" exports导出模块")]),s._v(" "),a("p",[a("strong",[s._v("Module与exports对象")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建一个js文件并打印输出module")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*Module {\n  id: '.',\n  exports: {}, //module 对象中有一个 exports 对象\n  parent: null,\n  filename: 'C:\\\\Users\\\\Sunburst\\\\Desktop\\\\node.js',\n  loaded: false,\n  children: [],\n  paths:\n   [ 'C:\\\\Users\\\\Sunburst\\\\Desktop\\\\node_modules',\n     'C:\\\\Users\\\\Sunburst\\\\node_modules',\n     'C:\\\\Users\\\\node_modules',\n     'C:\\\\node_modules' ] }\n*/")]),s._v("\n")])])]),a("ul",[a("li",[s._v("每个模块中都有一个 module 对象，是所有Node.js类型的文件中都默认隐式存在的")]),s._v(" "),a("li",[s._v("把需要导出的成员都挂载到 module.exports 接口对象中，每个模块最终return 的也是 modules.exports")]),s._v(" "),a("li",[s._v("但为了简化书写，Node.js同时在每一个模块中都提供了一个成员叫："),a("code",[s._v("exports")])]),s._v(" "),a("li",[s._v("即"),a("code",[s._v("exports === module.exports")]),s._v("，exports只是一个地址指向module.exports对象的引用")]),s._v(" "),a("li",[s._v("所以对于使用"),a("code",[s._v("moudle.exports.xxx = xxx")]),s._v(" 的方式导出的模块，也可以通过"),a("code",[s._v("exports.xxx = xxx")]),s._v("的方式导出")]),s._v(" "),a("li",[a("strong",[s._v("但当一个模块需要导出单个成员的时候，则必须使用：module.exports = xxx 的方式")])])]),s._v(" "),a("p",[a("strong",[s._v("通过在exports对象上设置属性的方式来创建并导出模块")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建foo.js文件，定义变量和方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" add\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 外部只能得到挂载到exports对象上的成员，这样做的目的是为了解决变量命名冲突的问题")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们也可以通过多次为这个对象添加成员实现对外导出多个内部成员")]),s._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" Foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在别的文件中通过require引入foo.js模块")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//{add: [Function:add], str:'hello'}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//默认得到的是对象 只能使用 . 点访问的方式来得到对象里的某个成员")]),s._v("\n")])])]),a("p",[a("strong",[s._v("通过module.exorts的方式来创建并导出模块")])]),s._v(" "),a("blockquote",[a("p",[s._v("上面的方式可以得到模块中的方法和变量，但有时候，对于一个模块，我们的需求是仅仅导出一个方法/数组/字符串来使用就可以了。比如，只导出foo.js文件中的add方法，即Foo就是add方法，而不必通过Foo.add就能直接使用。")]),s._v(" "),a("ul",[a("li",[s._v("当一个模块需要导出单个成员的时候，可能会想到 "),a("code",[s._v("exports = xxx")]),s._v("这种方式 ，但这种方式不行，导出的exports为空对象")]),s._v(" "),a("li",[s._v("因为 exports 只是 module.exports 的一个引用，这样相当于给exports指向的地址重新赋值，切断了exports与module.exports之间的联系，而最终模块向外 return的是 module.exports，所以为空对象")])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果一个模块需要直接导出某个成员，而非挂载的方式，则必须使用module.exports的方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//导出方法")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" add\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//function add(x, y) {")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  return x + y")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//导出字符串")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//导出对象")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[a("p",[s._v("但是如果是通过：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports \n")])])]),a("p",[s._v("赋给exports对象module.exports这个的值，则可以用来重新建立引用关系")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'walker'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//exports = xx 重新赋值，不会影响最后导出的 module.exports")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//exports = {name,age}")]),s._v("\n\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mint'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重新建立 exports 和 module.exports 之间的引用关系")]),s._v("\nexports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports\n\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此时导出的对象为 { name: 'mint', age: 20, foo: 'bar' }")]),s._v("\n")])])])])]),s._v(" "),a("h3",{attrs:{id:"require加载模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#require加载模块","aria-hidden":"true"}},[s._v("#")]),s._v(" require加载模块")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" 自定义变量名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'模块'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("另外require 方法有两个作用：")]),s._v(" "),a("blockquote",[a("ol",[a("li",[s._v("加载文件模块并执行里面的代码")]),s._v(" "),a("li",[s._v("拿到被加载文件模块导出的接口对象")])])]),s._v(" "),a("p",[a("strong",[s._v("require优先从缓存中加载模块")])]),s._v(" "),a("p",[s._v("目的是为了避免重复加载，提高模块加载效率")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a.js文件")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a.js 被加载了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b.js文件")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.js 被加载了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.js'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//main.js文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" fn2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fn2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ol",[a("li",[s._v("通过执行"),a("code",[s._v("node main.js")]),s._v("，首先加载a.js文件（放入缓存）并执行a.js文件中的代码")]),s._v(" "),a("li",[s._v("打印输出： a.js 被加载了，然后加载b.js文件（放入缓存）并执行b.js文件中的代码")]),s._v(" "),a("li",[s._v("打印输出： b.js 被加载了，然后导出 “Hello ,I’m b.js.”")]),s._v(" "),a("li",[s._v("继续执行a.js文件中的代码，将b.js文件导出的对象赋值给fn，然后打印输出fn")]),s._v(" "),a("li",[s._v("再执行main.js文件中的代码，但此时并不会重复加载执行b.js文件里面的代码（优先从缓存中加载）")]),s._v(" "),a("li",[s._v("把从缓存中拿到b.js文件的接口对象赋值给fn2，然后打印输出fn2")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//运行结果")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js 被加载了\n\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js 被加载了\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.js'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里没有再打印一遍b.js文件被加载了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//说明只是从缓存取到b.js导出的接口对象，但并没有再执行b.js文件里的代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.js'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"模块查找机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块查找机制","aria-hidden":"true"}},[s._v("#")]),s._v(" 模块查找机制")]),s._v(" "),a("h3",{attrs:{id:"模块标识符分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块标识符分析","aria-hidden":"true"}},[s._v("#")]),s._v(" 模块标识符分析")]),s._v(" "),a("ol",[a("li",[s._v("核心模块（require(‘fs’)）：\n"),a("ul",[a("li",[s._v("核心模块文件已经被编译成二进制文件放进node.js中了")]),s._v(" "),a("li",[s._v("不需要写加载路径，只需要按照名字来加载就可以了")])])]),s._v(" "),a("li",[s._v("路径形式的自定义模块（require(‘../utils/foo.js’)）：\n"),a("ul",[a("li",[a("code",[s._v("/xxx")]),s._v(" "),a("code",[s._v("d:/files/foo.js")]),s._v(" 几乎不用")]),s._v(" "),a("li",[s._v("首位的 / 在这里表示的是当前文件模块所属磁盘根路径")]),s._v(" "),a("li",[a("code",[s._v("./")]),s._v(" 当前目录 "),a("code",[s._v("../")]),s._v("上一级目录，不可省略")])])]),s._v(" "),a("li",[s._v("第三方模块（require(‘express)）：\n"),a("ul",[a("li",[s._v("第三方模块都必须通过 npm 来下载")]),s._v(" "),a("li",[s._v("不可能有任何一个第三方包和核心模块的名字是一样的")])])])]),s._v(" "),a("h3",{attrs:{id:"模块查找机制-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块查找机制-2","aria-hidden":"true"}},[s._v("#")]),s._v(" 模块查找机制")]),s._v(" "),a("p",[s._v("优先从缓存加载")]),s._v(" "),a("p",[s._v("核心模块")]),s._v(" "),a("p",[s._v("路径形式的自定义文件模块")]),s._v(" "),a("p",[s._v("第三方模块")]),s._v(" "),a("blockquote",[a("ol",[a("li",[s._v("先找到当前文件所处目录中的 node_modules 目录")]),s._v(" "),a("li",[s._v("node_modules/express")]),s._v(" "),a("li",[s._v("node_modules/express/package.json 文件")]),s._v(" "),a("li",[s._v("node_modules/express/package.json 文件中的 main 属性")]),s._v(" "),a("li",[s._v("main 属性中就记录了 express的入口模块")]),s._v(" "),a("li",[s._v("然后加载使用这个第三方包")])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("如果 package.json 文件不存在或者 main 指定的入口模块也没有")]),s._v(" "),a("li",[s._v("则 node 会自动找该目录下的 index.js（默认备选项）")])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("如果以上所有任何一个条件都不成立，则会进入上一级目录中的 node_modules 目录查找")]),s._v(" "),a("li",[s._v("如果上一级还没有，则继续往上上一级查找……")]),s._v(" "),a("li",[s._v("如果直到当前磁盘根目录还找不到，最后报错： "),a("code",[s._v("can not find module xxx")])]),s._v(" "),a("li",[s._v("注意： 我们一个项目有且只有一个 node_modules，放在项目根目录中，这样的话项目中所有的子目录中的代码都可以加载到第三方包，不会出现有多个 node_modules")])])])])},[],!1,null,null,null);t.default=e.exports}}]);