(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{351:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("a",{attrs:{href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Pages"),e("OutboundLink")],1),t._v("是GitHub提供的可用于托管静态网站（比如博客）或资源的免费服务。它的使用非常简单，但每次你想要更新某些内容时都需要做一些重复的手动工作（除非你使用他们内置的jekyll工具）。举个🌰，我的Blog是基于Vuepress搭建的项目，如果每次写完文章我都需要先手动build一遍，然后再把 dist文件夹push到Github上，这一点都不酷！😎因此我决定使用"),e("a",{attrs:{href:"https://circleci.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Circle CI"),e("OutboundLink")],1),t._v(" 把我的Blog自动部署到GitHubPages。")]),t._v(" "),e("h2",{attrs:{id:"准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备工作","aria-hidden":"true"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),e("h3",{attrs:{id:"_1-注册-circleci"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-注册-circleci","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 注册 CircleCI")]),t._v(" "),e("p",[t._v("这一步十分简单，直接进入 "),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcircleci.com%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("CircleCI"),e("OutboundLink")],1),t._v(" 官网利用Github账号登录。")]),t._v(" "),e("h3",{attrs:{id:"_2-仓库授权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-仓库授权","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 仓库授权")]),t._v(" "),e("p",[t._v("在项目列表中在要部署的项目上点击Setup projects按钮，然后选择Linux 系统和 2.0版本平台，接下来就是配置"),e("code",[t._v("config.yml")]),t._v("文件。")]),t._v(" "),e("h3",{attrs:{id:"_3-创建config-yml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建config-yml","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 创建config.yml")]),t._v(" "),e("p",[t._v("在项目根目录或.circleci目录中为CircleCI创建名为config.yml的配置文件。")]),t._v(" "),e("h2",{attrs:{id:"授权circle-ci访问仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#授权circle-ci访问仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 授权Circle CI访问仓库")]),t._v(" "),e("p",[t._v("当你在点击Setup projects后，CircleCi 将会为你的项目在基于网络的分布式系统上（例如GitHub和Bitbucket）创建部署密钥。部署密钥是仓库专属的密钥。如果你使用GitHub作为你的分布式系统，而且GitHub拥有公钥，CircleCi 将会储存私有秘钥。部署密钥给予CircleCi 访问单个仓库的权限。为了保护CircleCi不能推送内容到你的仓库，部署密钥是只读的。")]),t._v(" "),e("p",[t._v("但是既然要使Circle CI实现自动部署，肯定需要在构建后push内容到项目的仓库。那么就要创建一个有读写权限的密钥，即用户密钥。 "),e("a",{attrs:{href:"https://circleci.com/docs/2.0/gh-bb-integration/#creating-a-github-user-key",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建用户密钥"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("然后将用户密钥的"),e("code",[t._v("fingerprints")]),t._v("添加到配置文件 config.yml中")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("version: 2\njobs:\n  deploy-job:\n    steps:\n      - add_ssh_keys:\n          fingerprints:\n            - "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SO:ME:FIN:G:ER:PR:IN:T"')]),t._v("\n")])])]),e("p",[t._v("除此之外，部署脚本还需要了解你的用户密钥关联的用户名和电子邮件。这些信息可以定义在config.yml中，但最好存储在Circle Ci 的项目环境变量中。这样你可以在部署脚本中使用以下内容：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GH_EMAIL")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GH_NAME")]),t._v("\n")])])]),e("h2",{attrs:{id:"编辑部署脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编辑部署脚本","aria-hidden":"true"}},[t._v("#")]),t._v(" 编辑部署脚本")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("version: 2\njobs:\n  build:\n    branches:\n      ignore:\n        - master\n    docker:\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specify the version you desire here")]),t._v("\n      - image: circleci/node:latest\n\n    working_directory: ~/repo\n    environment:\n      - SOURCE_BRANCH: src\n      - TARGET_BRANCH: master\n    steps:\n      - add_ssh_keys:\n          fingerprints:\n            - "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xx:xx:xx:xx:xx"')]),t._v("\n      - checkout\n\n      - restore_cache:\n          keys:\n          - v1-dependencies-"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" checksum "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"package.json"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fallback to using the latest cache if no exact match is found")]),t._v("\n          - v1-dependencies-\n\n      - run:\n          name: Install dependencies \n          command: yarn "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n      - save_cache:\n          paths:\n            - node_modules\n          key: v1-dependencies-"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" checksum "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"package.json"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      - deploy:\n          name: Deploy\n          command: "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CIRCLE_BRANCH")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SOURCE_BRANCH")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GH_EMAIL")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GH_NAME")]),t._v("\n\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CIRCLE_REPOSITORY_URL")]),t._v(" out\n\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" out\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TARGET_BRANCH")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --orphan "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TARGET_BRANCH")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# write my custom domain name into the CNAME file")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sunburst.wang"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dist/CNAME\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -a dist/. out/.\n\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p out/.circleci "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -a .circleci/. out/.circleci/.\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" out\n\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" add -A\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automated deployment to GitHub Pages: '),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CIRCLE_SHA1}")]),t._v('"')]),t._v(" --allow-empty\n\n              "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TARGET_BRANCH")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),e("p",[t._v("Happy building! 🍻")]),t._v(" "),e("p",[t._v("BTW，为了方便，这份配置文件有意遗漏了两个可能的附加内容：🤪")]),t._v(" "),e("ol",[e("li",[t._v("将部署脚本放入单独的deploy.sh脚本中")]),t._v(" "),e("li",[t._v("使用Circle CI工作流可以更清晰地在主分支上运行脚本。")])]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.frederikring.com/articles/deploying-github-pages-circle-ci/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.frederikring.com/articles/deploying-github-pages-circle-ci/"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://circleci.com/docs/2.0/language-javascript/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://circleci.com/docs/2.0/language-javascript/"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://circleci.com/docs/2.0/gh-bb-integration/#creating-a-github-user-key",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://circleci.com/docs/2.0/gh-bb-integration/#creating-a-github-user-key"),e("OutboundLink")],1)])])])},[],!1,null,null,null);a.default=n.exports}}]);